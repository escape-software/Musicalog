//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MusicalogWeb.MusicalogService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MusicalogService.IMusicalogService")]
    public interface IMusicalogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicalogService/GetAlbums", ReplyAction="http://tempuri.org/IMusicalogService/GetAlbumsResponse")]
        System.Collections.Generic.List<MusicalogModel.Album> GetAlbums();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicalogService/GetAlbums", ReplyAction="http://tempuri.org/IMusicalogService/GetAlbumsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MusicalogModel.Album>> GetAlbumsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicalogService/GetAlbum", ReplyAction="http://tempuri.org/IMusicalogService/GetAlbumResponse")]
        MusicalogModel.Album GetAlbum(int albumID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicalogService/GetAlbum", ReplyAction="http://tempuri.org/IMusicalogService/GetAlbumResponse")]
        System.Threading.Tasks.Task<MusicalogModel.Album> GetAlbumAsync(int albumID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicalogService/SaveAlbum", ReplyAction="http://tempuri.org/IMusicalogService/SaveAlbumResponse")]
        bool SaveAlbum(MusicalogModel.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicalogService/SaveAlbum", ReplyAction="http://tempuri.org/IMusicalogService/SaveAlbumResponse")]
        System.Threading.Tasks.Task<bool> SaveAlbumAsync(MusicalogModel.Album album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicalogService/DeleteAlbum", ReplyAction="http://tempuri.org/IMusicalogService/DeleteAlbumResponse")]
        bool DeleteAlbum(int albumID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMusicalogService/DeleteAlbum", ReplyAction="http://tempuri.org/IMusicalogService/DeleteAlbumResponse")]
        System.Threading.Tasks.Task<bool> DeleteAlbumAsync(int albumID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMusicalogServiceChannel : MusicalogWeb.MusicalogService.IMusicalogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MusicalogServiceClient : System.ServiceModel.ClientBase<MusicalogWeb.MusicalogService.IMusicalogService>, MusicalogWeb.MusicalogService.IMusicalogService {
        
        public MusicalogServiceClient() {
        }
        
        public MusicalogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MusicalogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MusicalogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MusicalogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<MusicalogModel.Album> GetAlbums() {
            return base.Channel.GetAlbums();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MusicalogModel.Album>> GetAlbumsAsync() {
            return base.Channel.GetAlbumsAsync();
        }
        
        public MusicalogModel.Album GetAlbum(int albumID) {
            return base.Channel.GetAlbum(albumID);
        }
        
        public System.Threading.Tasks.Task<MusicalogModel.Album> GetAlbumAsync(int albumID) {
            return base.Channel.GetAlbumAsync(albumID);
        }
        
        public bool SaveAlbum(MusicalogModel.Album album) {
            return base.Channel.SaveAlbum(album);
        }
        
        public System.Threading.Tasks.Task<bool> SaveAlbumAsync(MusicalogModel.Album album) {
            return base.Channel.SaveAlbumAsync(album);
        }
        
        public bool DeleteAlbum(int albumID) {
            return base.Channel.DeleteAlbum(albumID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAlbumAsync(int albumID) {
            return base.Channel.DeleteAlbumAsync(albumID);
        }
    }
}
